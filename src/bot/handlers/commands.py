import logging
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ChatType, ParseMode
from telegram.ext import CallbackContext

from services.context_manager import context_manager
from services.pollinations_service import generate_image_async, auto_analyze_generated_image
from utils.telegram_utils import show_typing
from utils.decorators import handle_errors, track_performance
from utils.health_check import get_health_status
from config.settings import settings

logger = logging.getLogger(__name__)
import random

@handle_errors
@track_performance
async def start(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    chat_type = update.effective_chat.type
    user = update.effective_user
    
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.id} –≤ —á–∞—Ç–µ {chat_id} (—Ç–∏–ø: {chat_type})")
    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    
    context_manager.init_context(chat_id)
    
    current_prompt = context_manager.get_system_prompt(chat_id)
    # –†–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤ –∏ –≥—Ä—É–ø–ø
    if update.effective_chat.type == ChatType.PRIVATE:
        message_text = (
            "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –°–∏–∫–°–∏–∫.\n"
            "–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, –æ—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!\n\n"
            "‚öôÔ∏è **–ö–æ–º–∞–Ω–¥—ã:**\n"
            "/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n"
            "/reset - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n"
            "/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
            "/roles - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–æ–ª–∏\n"
            "/imagine - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n"    
            "/prompt - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "/setprompt - –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "/resetprompt - —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–º–ø—Ç –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n"
            "/updatecmds - –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥\n"
            "/settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞\n"
            "/stop - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n"
            "/health - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞\n\n"
            "üé≠ **–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å:**\n"
            f"{current_prompt[:100]}{'...' if len(current_prompt) > 100 else ''}\n\n"
            "üö´ –†–µ–∫–ª–∞–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è!"
        )
    else:
        message_text = (
            "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –°–∏–∫–°–∏–∫.\n"
            "–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, –æ—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!\n\n"
            "‚öôÔ∏è **–ö–æ–º–∞–Ω–¥—ã (—Ä–∞–±–æ—Ç–∞—é—Ç –≤–µ–∑–¥–µ):**\n"
            "/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n"
            "/reset - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n"
            "/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
            "/roles - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–æ–ª–∏\n"
            "/imagine - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n"    
            "/prompt - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "/setprompt - –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "/resetprompt - —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–º–ø—Ç –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n"
            "/updatecmds - –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥\n"
            "/health - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞\n\n"
            "üí° **–í –≥—Ä—É–ø–ø–∞—Ö:**\n"
            "‚Ä¢ –ö–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è\n"
            "‚Ä¢ –î–ª—è –æ–±—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @–∏–º—è_–±–æ—Ç–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –º–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
            "‚Ä¢ –í–µ—Å—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è\n\n"
            "üé≠ **–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å:**\n"
            f"{current_prompt[:100]}{'...' if len(current_prompt) > 100 else ''}\n\n"
            "üö´ –†–µ–∫–ª–∞–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è!"
        )
    
    await update.message.reply_text(message_text)


@handle_errors
async def reset_context(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    context_manager.reset_context(chat_id)
    await update.message.reply_text("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞! –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥.")


@handle_errors
async def stop_command(update: Update, context: CallbackContext):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π"""
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    has_active_operations = (
        context_manager.is_generating(chat_id, "image") or
        context_manager.is_generating(chat_id, "text") or
        context_manager.is_generating(chat_id, "voice") or
        context_manager.has_user_state(chat_id, "imagine")
    )
    
    if not has_active_operations:
        await update.message.reply_text("‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
        return
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    context_manager.force_stop_all_operations(chat_id)
    
    stop_msg = await update.message.reply_text(
        "üõë **–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!**\n\n"
        "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞\n"
        "‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞\n"
        "‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞\n"
        "‚Ä¢ –í—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—á–∏—â–µ–Ω—ã\n\n"
        "–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.",
        parse_mode=ParseMode.MARKDOWN
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    context_manager.add_cleanup_message(chat_id, stop_msg.message_id)


@handle_errors
async def settings_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    s = context_manager.get_settings(chat_id)
    verb = s.get("verbosity", "normal")
    lang = s.get("lang", "auto")
    group_mode = s.get("group_mode", "mention_or_reply")
    context_limit = s.get("context_limit", context_manager.get_context_limit(chat_id))
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–∞–Ω–∞–ª–∏–∑–∞
    auto_analyze_enabled = context_manager.is_auto_analyze_enabled(chat_id)
    auto_analyze_text = "–í–∫–ª—é—á–µ–Ω" if auto_analyze_enabled else "–û—Ç–∫–ª—é—á–µ–Ω"

    keyboard = [
        [InlineKeyboardButton(f"–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è: {verb}", callback_data="settings::toggle_verbosity")],
        [InlineKeyboardButton(f"–Ø–∑—ã–∫: {lang}", callback_data="settings::toggle_lang")],
        [InlineKeyboardButton(f"–†–µ–∂–∏–º –≤ –≥—Ä—É–ø–ø–µ: {group_mode}", callback_data="settings::toggle_group_mode")],
        [InlineKeyboardButton(f"–õ–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {context_limit}", callback_data="settings::context_limit")],
        [InlineKeyboardButton(f"–ê–≤—Ç–æ–∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {auto_analyze_text}", callback_data="settings::toggle_auto_analyze")],
    ]

    text = (
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞\n\n"
        f"‚Ä¢ –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è: {verb}\n"
        f"‚Ä¢ –Ø–∑—ã–∫: {lang}\n"
        f"‚Ä¢ –†–µ–∂–∏–º –≤ –≥—Ä—É–ø–ø–µ: {group_mode}\n"
        f"‚Ä¢ –õ–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {context_limit}\n"
        f"‚Ä¢ –ê–≤—Ç–æ–∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {auto_analyze_text}\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø—É–Ω–∫—Ç, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å."
    )
    await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))


@handle_errors
async def help_command(update: Update, context: CallbackContext):
    help_text = (
        "üÜò –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:\n\n"
        "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π:\n"
        "- –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã\n"
        "- –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
        "- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º\n\n"
        "üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n"
        "/reset ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n"
        "/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/roles ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏\n"
        "/imagine ‚Äî —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n"
        "/prompt ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
        "/setprompt ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
        "/resetprompt - —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–º–ø—Ç –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n"
        "/updatecmds ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥\n"
        "/settings ‚Äî –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫\n"
        "/stop ‚Äî –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n"
        "/health ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞\n\n"
        "üí° **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n"
        "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n"
        "‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã"
    )
    await update.message.reply_text(help_text)


@handle_errors
async def roles_command(update: Update, context: CallbackContext):
    roles = context_manager.get_available_roles()
    keyboard = [[InlineKeyboardButton(role.capitalize(), callback_data=f"role::{role}")] for role in roles]
    keyboard.append([InlineKeyboardButton("–°–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å", callback_data="role::reset")])
    await update.message.reply_text(
        "üé≠ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

@handle_errors
async def prompt_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    current_prompt = context_manager.get_system_prompt(chat_id)
    await update.message.reply_text(f"üé≠ **–¢–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç:**\n\n{current_prompt}")


@handle_errors
async def setprompt_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    args = context.args
    
    if not args:
        await update.message.reply_text(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç! –ü—Ä–∏–º–µ—Ä: /setprompt –¢—ã –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç"
        )
        return
    
    new_prompt = ' '.join(args)
    context_manager.set_system_prompt(chat_id, new_prompt)
    await update.message.reply_text(f"‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω:\n\n{new_prompt}")


@handle_errors
async def resetprompt_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    context_manager.reset_system_prompt(chat_id)
    await update.message.reply_text("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å–±—Ä–æ—à–µ–Ω –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")


@handle_errors
async def update_commands_command(update: Update, context: CallbackContext):
    from telegram import BotCommand
    from telegram.ext import Application
    
    try:
        application = context.application
        commands = [
            BotCommand("start", "üöÄ –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º"),
            BotCommand("help", "‚ùì –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"),
            BotCommand("reset", "üîÑ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞"),
            BotCommand("prompt", "üé≠ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç"),
            BotCommand("setprompt", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç"),
            BotCommand("resetprompt", "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–º–ø—Ç –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"),
            BotCommand("roles", "üé≠ –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏"),
            BotCommand("settings", "‚öôÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"),
            BotCommand("imagine", "üñºÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é"),
            BotCommand("health", "üè• –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞")
        ]
        
        await application.bot.set_my_commands(commands)
        await update.message.reply_text("‚úÖ –ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥: {e}")
        err_msg = await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥")
        context_manager.add_cleanup_message(update.effective_chat.id, err_msg.message_id)



@handle_errors
@track_performance
async def imagine_command(update: Update, context: CallbackContext):
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º —Ä–∞–∑–º–µ—Ä–∞ –∏ —Å—Ç–∏–ª—è"""
    chat_id = update.effective_chat.id
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º rate limiting
    if not context_manager.check_rate_limit(user.id, chat_id, min_interval=2.0):
        logger.info(f"Rate limit –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –≤ —á–∞—Ç–µ {chat_id} (imagine)")
        await update.message.reply_text("‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.")
        return
    
    if context_manager.is_generating(chat_id, "image"):
        await update.message.reply_text("‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, —è –µ—â—ë –≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ‚Ä¶")
        return
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è rate limiting
    from utils.rate_limiter import rate_limiter
    rate_limiter.record_request(user.id, chat_id)

    # –ï—Å–ª–∏ –µ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —Ä–µ–∂–∏–º (–±—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è)
    if context.args:
        await _imagine_quick_mode(update, context)
        return
    
    # –ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º - –≤—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞
    await _show_size_selection(update, context)


async def _show_size_selection(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    chat_id = update.effective_chat.id
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–º–µ—Ä–æ–≤ (–ø–æ 2 –≤ —Ä—è–¥)
    keyboard = []
    presets = list(settings.image_size_presets.items())
    
    for i in range(0, len(presets), 2):
        row = []
        for j in range(2):
            if i + j < len(presets):
                key, preset = presets[i + j]
                emoji = preset["emoji"]
                name = preset["name"]
                row.append(InlineKeyboardButton(
                    f"{emoji} {name}", 
                    callback_data=f"imagine_size::{key}"
                ))
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    keyboard.append([InlineKeyboardButton("‚öôÔ∏è –°–≤–æ–π —Ä–∞–∑–º–µ—Ä", callback_data="imagine_size::custom")])
    
    await update.message.reply_text(
        "üñºÔ∏è **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è**\n\n–í—ã–±–µ—Ä–∏ —Ä–∞–∑–º–µ—Ä:",
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode=ParseMode.MARKDOWN
    )


async def _show_style_selection(chat_id: int, bot, size_key: str, width: int, height: int):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    context_manager.set_user_state(chat_id, "imagine", {
        "step": "style_selection",
        "size_key": size_key,
        "width": width,
        "height": height
    })
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å—Ç–∏–ª–µ–π (–ø–æ 2 –≤ —Ä—è–¥)
    keyboard = []
    styles = list(settings.image_style_presets.items())
    
    for i in range(0, len(styles), 2):
        row = []
        for j in range(2):
            if i + j < len(styles):
                key, style = styles[i + j]
                emoji = style["emoji"]
                name = style["name"]
                row.append(InlineKeyboardButton(
                    f"{emoji} {name}", 
                    callback_data=f"imagine_style::{key}"
                ))
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å—Ç–∏–ª—å"
    keyboard.append([InlineKeyboardButton("‚è≠Ô∏è –ë–µ–∑ —Å—Ç–∏–ª—è", callback_data="imagine_style::none")])
    
    size_info = settings.image_size_presets[size_key]
    text = f"üé® **–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):**\n\n–†–∞–∑–º–µ—Ä: {size_info['emoji']} {size_info['name']} ({width}√ó{height})"
    
    return text, InlineKeyboardMarkup(keyboard)


async def _request_description(chat_id: int, bot, size_key: str, width: int, height: int, style_key: str = None):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    state_data = {
        "step": "waiting_description",
        "size_key": size_key,
        "width": width,
        "height": height,
        "style_key": style_key
    }
    context_manager.set_user_state(chat_id, "imagine", state_data)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
    size_info = settings.image_size_presets[size_key]
    text = f"üìù **–û–ø–∏—à–∏ —á—Ç–æ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å:**\n\n"
    text += f"–†–∞–∑–º–µ—Ä: {size_info['emoji']} {size_info['name']} ({width}√ó{height})\n"
    
    if style_key and style_key != "none":
        style_info = settings.image_style_presets[style_key]
        text += f"–°—Ç–∏–ª—å: {style_info['emoji']} {style_info['name']}\n"
    
    text += "\nüí° –ù–∞–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..."
    
    return text


async def _imagine_quick_mode(update: Update, context: CallbackContext):
    """–ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)"""
    chat_id = update.effective_chat.id
    
    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã (—Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞)
    seed = random.randint(0, 2**32-1)
    args = context.args[:]
    width, height = 1024, 1024
    prompt_parts = []
    i = 0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ—Å–µ—Ç—ã –≤ –ø–µ—Ä–≤–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–µ
    if args and args[0].lower() in settings.image_size_presets:
        preset = settings.image_size_presets[args[0].lower()]
        width, height = preset["width"], preset["height"]
        args = args[1:]  # —É–±–∏—Ä–∞–µ–º –ø—Ä–µ—Å–µ—Ç –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    
    # –ü–∞—Ä—Å–∏–º —Ñ–ª–∞–≥–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ seed
    while i < len(args):
        if args[i] == "--w" and i + 1 < len(args):
            try:
                width = max(256, min(1920, int(args[i+1])))
                i += 2
                continue
            except Exception:
                pass
        elif args[i] == "--h" and i + 1 < len(args):
            try:
                height = max(256, min(1920, int(args[i+1])))
                i += 2
                continue
            except Exception:
                pass
        elif args[i].lower().startswith('seed:'):
            try:
                seed = int(args[i].split(':', 1)[1])
                i += 1
                continue
            except ValueError:
                pass
        
        prompt_parts.append(args[i])
        i += 1
    
    prompt = " ".join(prompt_parts).strip()
    if not prompt:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º
        presets_text = "üñºÔ∏è **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π**\n\n"
        presets_text += "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `/imagine [—Ä–∞–∑–º–µ—Ä] –æ–ø–∏—Å–∞–Ω–∏–µ [seed:—á–∏—Å–ª–æ]`\n\n"
        presets_text += "üìê **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã:**\n"
        for key, preset in settings.image_size_presets.items():
            presets_text += f"‚Ä¢ `{key}` - {preset['name']} ({preset['width']}√ó{preset['height']})\n"
        presets_text += f"‚Ä¢ `--w XXX --h XXX` - —Ç–æ—á–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã\n\n"
        presets_text += "**–ü—Ä–∏–º–µ—Ä—ã:**\n"
        presets_text += "‚Ä¢ `/imagine –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç`\n"
        presets_text += "‚Ä¢ `/imagine portrait –∫–æ—Ç –≤ —à–ª—è–ø–µ`\n"
        presets_text += "‚Ä¢ `/imagine wallpaper –≥–æ—Ä–Ω—ã–π –ø–µ–π–∑–∞–∂`\n"
        presets_text += "‚Ä¢ `/imagine --w 512 --h 768 —Ä–æ–±–æ—Ç seed:12345`"
        
        await update.message.reply_text(presets_text, parse_mode=ParseMode.MARKDOWN)
        return

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    await _generate_image(chat_id, context.bot, prompt, width, height, seed)


async def _generate_image(chat_id: int, bot, prompt: str, width: int, height: int, seed: int = None, style_key: str = None, description_message_id: int = None):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    
    if seed is None:
        seed = random.randint(0, 2**32-1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –∫ –ø—Ä–æ–º–ø—Ç—É –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω
    final_prompt = prompt
    if style_key and style_key in settings.image_style_presets:
        style_info = settings.image_style_presets[style_key]
        final_prompt = f"{prompt}, {style_info['prompt']}"
    
    context_manager.set_generating(chat_id, True, "image")
    status = await bot.send_message(chat_id, "üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ‚Ä¶")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
        if context_manager.is_force_stop_requested(chat_id):
            stop_msg = await status.edit_text("üõë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            context_manager.add_cleanup_message(chat_id, stop_msg.message_id)
            context_manager.clear_force_stop(chat_id)
            return

        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–º–µ–Ω—ã
        import asyncio
        task = asyncio.create_task(generate_image_async(final_prompt, width, height, seed=seed))

        # –ñ–¥–µ–º —Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        while not task.done():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É –∫–∞–∂–¥—ã–µ 0.05 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–π —Ä–µ–∞–∫—Ü–∏–∏
            if context_manager.is_force_stop_requested(chat_id):
                task.cancel()
                try:
                    await task
                except asyncio.CancelledError:
                    pass
                stop_msg = await status.edit_text("üõë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                context_manager.add_cleanup_message(chat_id, stop_msg.message_id)
                context_manager.clear_force_stop(chat_id)
                return

            await asyncio.sleep(0.05)

        content, url = await task
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        if context_manager.is_force_stop_requested(chat_id):
            stop_msg = await status.edit_text("üõë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            context_manager.add_cleanup_message(chat_id, stop_msg.message_id)
            context_manager.clear_force_stop(chat_id)
            return
            
        if not content:
            if url == "rate_limit":
                await status.edit_text("‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —Å–µ—Ä–≤–∏—Å—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.")
            else:
                await status.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            context_manager.add_cleanup_message(chat_id, status.message_id)
            return
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        if context_manager.is_auto_analyze_enabled(chat_id):
            try:
                analysis = await auto_analyze_generated_image(
                    image_content=content, 
                    prompt=final_prompt, 
                    token=settings.pollinations_token
                )
                if analysis:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–∞–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
                    context_manager.add_image_context(chat_id, analysis)
                    logger.debug(f"–ê–≤—Ç–æ–∞–Ω–∞–ª–∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —á–∞—Ç–∞ {chat_id}")
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ–∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        keyboard = [
            [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"imagine::{width}x{height}")],
            [InlineKeyboardButton("üé® –ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="imagine_new")]
        ]
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await bot.send_photo(
            chat_id=chat_id, 
            photo=content, 
            caption=f"{prompt}",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        
        try:
            await bot.delete_message(chat_id=chat_id, message_id=status.message_id)
        except Exception:
            pass
        
        # –£–¥–∞–ª—è–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è/–æ—à–∏–±–∫–∏ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        for mid in context_manager.consume_cleanup_messages(chat_id):
            try:
                await bot.delete_message(chat_id=chat_id, message_id=mid)
            except Exception:
                pass
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        if description_message_id:
            try:
                await bot.delete_message(chat_id=chat_id, message_id=description_message_id)
                logger.info(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {description_message_id}")
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º {description_message_id}: {e}")
            
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        context_manager.clear_user_state(chat_id, "imagine")
        
    except Exception as e:
        logger.exception("_generate_image error")
        await status.edit_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:300]}")
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        if description_message_id:
            try:
                await bot.delete_message(chat_id=chat_id, message_id=description_message_id)
                logger.info(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏: {description_message_id}")
            except Exception as delete_error:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º {description_message_id} –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏: {delete_error}")
    finally:
        context_manager.set_generating(chat_id, False, "image")



@handle_errors
async def health_command(update: Update, context: CallbackContext):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞"""
    health = get_health_status()
    
    if health["status"] == "error":
        err_msg = await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {health.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        context_manager.add_cleanup_message(update.effective_chat.id, err_msg.message_id)
        return
    
    message = (
        f"üè• **–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:** {health['status']}\n"
        f"‚è±Ô∏è **–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:** {health['uptime_hours']:.1f} —á–∞—Å–æ–≤\n"
        f"üíæ **–ü–∞–º—è—Ç—å:** {health['memory_usage_percent']:.1f}% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ\n"
        f"üíø **–î–∏—Å–∫:** {health['disk_usage_percent']:.1f}% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ\n"
        f"üí¨ **–ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤:** {health['active_contexts']}\n"
        f"üìù **–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π:** {health['total_messages']}\n"
        f"üìä **–ó–∞–ø—Ä–æ—Å–æ–≤:** {health['request_count']}\n"
        f"‚ùå **–û—à–∏–±–æ–∫:** {health['error_count']} ({health['error_rate_percent']:.1f}%)"
    )
    
    await update.message.reply_text(message, parse_mode=ParseMode.MARKDOWN)




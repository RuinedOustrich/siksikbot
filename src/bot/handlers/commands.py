import logging
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ChatType, ParseMode
from telegram.ext import CallbackContext, ContextTypes

from services.context_manager import context_manager
from services.pollinations_service import generate_image
from utils.telegram_utils import show_typing, send_long_message

logger = logging.getLogger(__name__)
import random

async def start(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    chat_type = update.effective_chat.type
    user = update.effective_user
    
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.id} –≤ —á–∞—Ç–µ {chat_id} (—Ç–∏–ø: {chat_type})")
    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    
    context_manager.init_context(chat_id)
    
    current_prompt = context_manager.get_system_prompt(chat_id)
    # –†–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤ –∏ –≥—Ä—É–ø–ø
    if update.effective_chat.type == ChatType.PRIVATE:
        message_text = (
            "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –°–∏–∫–°–∏–∫.\n"
            "–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, –æ—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!\n\n"
            "‚öôÔ∏è **–ö–æ–º–∞–Ω–¥—ã:**\n"
            "/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n"
            "/reset - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n"
            "/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
            "/prompt - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "/setprompt - –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "/roles - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–æ–ª–∏\n"
            "/setrole <—Ä–æ–ª—å> - –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å (storyteller | psychologist | rude)\n"
            "/resetrole - —Å–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å\n"
            "/contextlimit - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n"
            "/setcontextlimit <—á–∏—Å–ª–æ> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n"
            "/updatecmds - –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥\n\n"
            "üé≠ **–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å:**\n"
            f"{current_prompt[:100]}{'...' if len(current_prompt) > 100 else ''}\n\n"
            "üö´ –†–µ–∫–ª–∞–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è!"
        )
    else:
        message_text = (
            "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –°–∏–∫–°–∏–∫.\n"
            "–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, –æ—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!\n\n"
            "‚öôÔ∏è **–ö–æ–º–∞–Ω–¥—ã (—Ä–∞–±–æ—Ç–∞—é—Ç –≤–µ–∑–¥–µ):**\n"
            "/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n"
            "/reset - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n"
            "/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
            "/prompt - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "/setprompt - –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "/roles - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–æ–ª–∏\n"
            "/setrole <—Ä–æ–ª—å> - –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å (storyteller | psychologist | rude)\n"
            "/resetrole - —Å–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å\n"
            "/contextlimit - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n"
            "/setcontextlimit <—á–∏—Å–ª–æ> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n"
            "/updatecmds - –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥\n\n"
            "üí° **–í –≥—Ä—É–ø–ø–∞—Ö:**\n"
            "‚Ä¢ –ö–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è\n"
            "‚Ä¢ –î–ª—è –æ–±—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @–∏–º—è_–±–æ—Ç–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –º–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
            "‚Ä¢ –í–µ—Å—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è\n\n"
            "üé≠ **–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å:**\n"
            f"{current_prompt[:100]}{'...' if len(current_prompt) > 100 else ''}\n\n"
            "üö´ –†–µ–∫–ª–∞–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è!"
        )
    
    await update.message.reply_text(message_text)


async def reset_context(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    context_manager.reset_context(chat_id)
    await update.message.reply_text("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞! –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥.")


async def help_command(update: Update, context: CallbackContext):
    help_text = (
        "üÜò –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:\n\n"
        "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π:\n"
        "- –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã\n"
        "- –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
        "- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º\n\n"
        "üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n"
        "/reset ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n"
        "/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/prompt ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
        "/setprompt ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
        "/roles ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏\n"
        "/setrole ‚Äî –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å\n"
        "/resetrole ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å\n"
        "/contextlimit ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ª–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n"
        "/setcontextlimit ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n"
        "/imagine ‚Äî —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n"
        "/updatecmds ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥\n\n"
        "üí° **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n"
        "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n"
        "‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã"
    )
    await update.message.reply_text(help_text)


async def roles_command(update: Update, context: CallbackContext):
    roles_text = (
        "üé≠ **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏:**\n\n"
        "**storyteller** ‚Äî —Ä–∞—Å—Å–∫–∞–∑—á–∏–∫ –∏—Å—Ç–æ—Ä–∏–π\n"
        "‚Ä¢ –°–æ–∑–¥–∞–µ—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —è—Ä–∫–∏–µ –æ–±—Ä–∞–∑—ã\n"
        "‚Ä¢ –†–∞–∑–≤–∏–≤–∞–µ—Ç —Å—é–∂–µ—Ç–Ω—ã–µ –ª–∏–Ω–∏–∏\n\n"
        "**psychologist** ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏—Ç—É–∞—Ü–∏–∏\n"
        "‚Ä¢ –î–∞–µ—Ç —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n"
        "‚Ä¢ –ü–æ–º–æ–≥–∞–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —á—É–≤—Å—Ç–≤–∞—Ö\n\n"
        "**rude** ‚Äî –≥—Ä—É–±—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫\n"
        "‚Ä¢ –ü—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\n"
        "‚Ä¢ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥\n"
        "‚Ä¢ –ë–µ–∑ –ø—Ä–∏–∫—Ä–∞—Å\n\n"
        "**astrologer** ‚Äî –∞—Å—Ç—Ä–æ–ª–æ–≥\n"
        "‚Ä¢ –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥–Ω–æ–∑—ã\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞\n"
        "‚Ä¢ –≠–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã\n\n"
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setrole <—Ä–æ–ª—å> –¥–ª—è –≤—ã–±–æ—Ä–∞"
    )
    await update.message.reply_text(roles_text)


async def setrole_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    args = context.args
    
    if not args:
        await update.message.reply_text(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å! –ü—Ä–∏–º–µ—Ä: /setrole storyteller\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: storyteller, psychologist, rude, astrologer"
        )
        return
    
    role = args[0].lower()
    valid_roles = ['storyteller', 'psychologist', 'rude', 'astrologer']
    
    if role not in valid_roles:
        await update.message.reply_text(
            f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å: {role}\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: {', '.join(valid_roles)}"
        )
        return
    
    context_manager.set_role(chat_id, role)
    await update.message.reply_text(f"‚úÖ –†–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {role}")


async def resetrole_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    context_manager.reset_role(chat_id)
    await update.message.reply_text("‚úÖ –†–æ–ª—å —Å–±—Ä–æ—à–µ–Ω–∞ –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")


async def prompt_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    current_prompt = context_manager.get_system_prompt(chat_id)
    await update.message.reply_text(f"üé≠ **–¢–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç:**\n\n{current_prompt}")


async def setprompt_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    args = context.args
    
    if not args:
        await update.message.reply_text(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç! –ü—Ä–∏–º–µ—Ä: /setprompt –¢—ã –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç"
        )
        return
    
    new_prompt = ' '.join(args)
    context_manager.set_system_prompt(chat_id, new_prompt)
    await update.message.reply_text(f"‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω:\n\n{new_prompt}")


async def resetprompt_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    context_manager.reset_system_prompt(chat_id)
    await update.message.reply_text("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å–±—Ä–æ—à–µ–Ω –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")


async def update_commands_command(update: Update, context: CallbackContext):
    from telegram import BotCommand
    from telegram.ext import Application
    
    try:
        application = context.application
        commands = [
            BotCommand("start", "üöÄ –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º"),
            BotCommand("help", "‚ùì –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"),
            BotCommand("reset", "üîÑ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞"),
            BotCommand("prompt", "üé≠ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç"),
            BotCommand("setprompt", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç"),
            BotCommand("resetprompt", "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–º–ø—Ç –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"),
            BotCommand("roles", "üé≠ –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏"),
            BotCommand("setrole", "üé≠ –í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å (storyteller|psychologist|astrologer|rude)"),
            BotCommand("resetrole", "üé≠ –°–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å –∫ —É–º–æ–ª—á–∞–Ω–∏—é"),
            BotCommand("contextlimit", "üìè –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"),
            BotCommand("setcontextlimit", "‚úèÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä. 30)"),
            BotCommand("imagine", "üñºÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é"),
        ]
        
        await application.bot.set_my_commands(commands)
        await update.message.reply_text("‚úÖ –ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥")


async def contextlimit_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    limit = context_manager.get_context_limit(chat_id)
    await update.message.reply_text(f"üìè –¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {limit} —Å–æ–æ–±—â–µ–Ω–∏–π")


async def setcontextlimit_command(update: Update, context: CallbackContext):
    chat_id = update.effective_chat.id
    args = context.args
    
    if not args:
        await update.message.reply_text(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ –ª–∏–º–∏—Ç! –ü—Ä–∏–º–µ—Ä: /setcontextlimit 30"
        )
        return
    
    try:
        limit = int(args[0])
        if limit < 1 or limit > 100:
            await update.message.reply_text("‚ùå –õ–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 100")
            return
        
        context_manager.set_context_limit(chat_id, limit)
        await update.message.reply_text(f"‚úÖ –õ–∏–º–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {limit} —Å–æ–æ–±—â–µ–Ω–∏–π")
    except ValueError:
        await update.message.reply_text("‚ùå –õ–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")


async def imagine_command(update: Update, context: CallbackContext):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é: /imagine <prompt> [--w 1024 --h 1024]"""
    chat_id = update.effective_chat.id
    if context_manager.is_generating(chat_id):
        await update.message.reply_text("‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, —è –µ—â—ë –≤—ã–ø–æ–ª–Ω—è—é –ø—Ä–µ–¥—ã–¥—É—â—É—é –∑–∞–¥–∞—á—É‚Ä¶")
        return

    if not context.args:
        await update.message.reply_text(
            "üñºÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /imagine <–æ–ø–∏—Å–∞–Ω–∏–µ> [--w 1024 --h 1024]\n–ü—Ä–∏–º–µ—Ä: /imagine –∫–æ—Ç –∫–æ—Å–º–æ–Ω–∞–≤—Ç --w 768 --h 768"
        )
        return

    # –ü–∞—Ä—Å–∏–º –ø—Ä–æ—Å—Ç—ã–µ —Ñ–ª–∞–≥–∏ —Ä–∞–∑–º–µ—Ä–æ–≤
    seed = random.randint(0, 2**32-1)
    args = context.args
    width, height = 1024, 1024
    prompt_parts = []
    i = 0
    while i < len(args):
        if args[i] == "--w" and i + 1 < len(args):
            try:
                width = max(256, min(1536, int(args[i+1])))
                i += 2
                continue
            except Exception:
                pass
        if args[i] == "--h" and i + 1 < len(args):
            try:
                height = max(256, min(1536, int(args[i+1])))
                i += 2
                continue
            except Exception:
                pass
        prompt_parts.append(args[i])
        i += 1
    prompt = " ".join(prompt_parts).strip()
    if not prompt:
        await update.message.reply_text("‚ùå –û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å")
        return

    context_manager.set_generating(chat_id, True)
    status = await update.message.reply_text("üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ‚Ä¶")
    try:
        content, url = await asyncio.to_thread(generate_image, prompt, width, height, seed = seed)
        if not content:
            await status.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            return
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"imagine::{width}x{height}::{seed}")],
        ])
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –≤ –ø–æ–¥–ø–∏—Å–∏ ‚Äî –ø–æ –ø—Ä–æ—Å—å–±–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await context.bot.send_photo(chat_id=chat_id, photo=content, caption=f"{prompt}", reply_markup=keyboard)
        try:
            await context.bot.delete_message(chat_id=chat_id, message_id=status.message_id)
        except Exception:
            pass
    except Exception as e:
        logger.exception("imagine_command error")
        await status.edit_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:300]}")
    finally:
        context_manager.set_generating(chat_id, False)
